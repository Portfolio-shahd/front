// File: c:\Users\ashre\Downloads\demo (1)\front\Portfolio\src\App.tsx
import { ChakraProvider, Box } from "@chakra-ui/react";
import Navbar from "./components/ui/navbar";
import LandingPage from "./sections/LandingPage/LandingPage";
import AboutMe from "./sections/About/About";
import Skills from "./sections/Skills/Skills";
import Projects from "./sections/Projects/Projects";
import Contact from "./sections/Contact/Contact";

function App() {
  return (
    <Box w="100%" maxW="100vw" overflowX="hidden">
      {/* Navbar en haut */}
      <Navbar />
      {/* Landing Page Section */}
      <Box id="home">
        <LandingPage />
      </Box>
      {/* About Me Section */}
      <Box id="aboutme">
        <AboutMe />
      </Box>
      {/* Skills Section */}
      <Box id="skills">
        <Skills />
      </Box>
      {/* Projects Section */}
      <Box id="myprojects">
        <Projects />
      </Box>
      {/* Contact Section */}
      <Box id="contact">
        <Contact />
      </Box>
    </Box>
  );
}

export default App;

// File: c:\Users\ashre\Downloads\demo (1)\front\Portfolio\src\components\ui\navbar.tsx
import React, { useRef } from "react";
import {
  Box,
  Flex,
  HStack,
  Link,
  IconButton,
  Button,
  useDisclosure,
  VStack,
} from "@chakra-ui/react";
import { Menu, X } from "lucide-react";

const Links = ["Home", "About Me", "Skills", "My Projects", "Contact"];

type NavLinkProps = {
  children: string;
  onClick?: (e: React.MouseEvent) => void;
};

const NavLink = ({ children, onClick }: NavLinkProps) => {
  const id = children.toLowerCase().replace(/\s+/g, "");
  return (
    <Link
      px={{ base: 1, md: 2 }}
      py={1}
      borderRadius="md"
      href={`#${id}`}
      onClick={onClick}
      fontWeight="medium"
      fontSize={{ base: "md", md: "lg" }}
      color="#3D0301"
      position="relative"
      transition="all 0.18s ease"
      _hover={{
        textDecoration: "none",
        color: "#D76C82",
        transform: "scale(1.03)",
      }}
      _after={{
        content: '""',
        position: "absolute",
        width: "0%",
        height: "2px",
        bottom: 0,
        left: 0,
        background: "#D76C82",
        transition: "width 0.28s ease",
      }}
    >
      {children}
    </Link>
  );
};

export default function Navbar() {
  const { isOpen, onToggle } = useDisclosure();
  const navbarRef = useRef<HTMLDivElement | null>(null);

  const handleNavClick =
    (anchorId: string) =>
    (e: React.MouseEvent) => {
      e.preventDefault();
      const target = document.getElementById(anchorId);
      if (!target) return;
      const headerHeight = navbarRef.current?.offsetHeight ?? 80;
      const extraSpacing = 12;
      const targetY =
        target.getBoundingClientRect().top + window.pageYOffset - headerHeight - extraSpacing;
      window.scrollTo({ top: Math.max(0, targetY), behavior: "smooth" });
      if (isOpen) {
        onToggle();
      }
    };

  return (
    <Box
      position={{ base: "fixed", md: "absolute" }}
      top={0}
      left={0}
      right={0}
      zIndex={20}
      px={{ base: 4, md: 8 }}
      py={{ base: 4, md: 6 }}
      bg={{ base: "#EBE8DB", md: "transparent" }}
    >
      <Box
        ref={navbarRef}
        background="#EBE8DB"
        borderRadius="full"
        px={{ base: 4, md: 8 }}
        py={{ base: 3, md: 4 }}
        border="1px solid #bb9fa4ff"
        boxShadow="0 8px 32px rgba(61, 3, 1, 0.1)"
        position="relative"
      >
        <Flex alignItems="center" justifyContent="space-between">
          <Flex alignItems="center" fontWeight="bold" fontSize={{ base: "xl", md: "2xl" }}>
            <Box
              color="#B03052"
              fontSize={{ base: "2xl", md: "3xl" }}
              fontWeight="extrabold"
            >
              S
            </Box>
          </Flex>

          <HStack gap={{ base: 4, md: 8 }} display={{ base: "none", md: "flex" }} alignItems="center">
            {Links.map((link) => {
              const id = link.toLowerCase().replace(/\s+/g, "");
              return (
                <NavLink key={link} onClick={handleNavClick(id)}>
                  {link}
                </NavLink>
              );
            })}
          </HStack>

          <Button
            background="#D76C82"
            color="#EBE8DB"
            px={{ base: 4, md: 6 }}
            py={{ base: 1, md: 2 }}
            borderRadius="full"
            fontWeight="semibold"
            fontSize={{ base: "xs", md: "sm" }}
            _hover={{
              transform: "translateY(-2px)",
              boxShadow: "0 12px 25px rgba(215, 108, 130, 0.4)",
              background: "#C95A78"
            }}
            transition="all 0.3s"
            display={{ base: "none", md: "inline-flex" }}
            onClick={handleNavClick("contact")}
          >
            Contact
          </Button>

          <IconButton
            aria-label="Menu"
            background="#EBE8DB"
            color="#3D0301"
            borderRadius="xl"
            border="1px solid #89676eff"
            _hover={{ background: "#E5E2D5" }}
            display={{ base: "flex", md: "none" }}
            onClick={onToggle}
            size={{ base: "sm", md: "md" }}
          >
            {isOpen ? <X size={{ base: 16, md: 18 }} /> : <Menu size={{ base: 16, md: 18 }} />}
          </IconButton>
        </Flex>

        <Box
          display={{ md: "none" }}
          maxHeight={isOpen ? "360px" : "0px"}
          overflow="hidden"
          transition="max-height 220ms ease"
          mt={{ base: 2, md: 4 }}
        >
          <VStack alignItems="start" gap={4} px={4} pb={4}>
            {Links.map((link) => {
              const id = link.toLowerCase().replace(/\s+/g, "");
              return (
                <NavLink key={link} onClick={handleNavClick(id)}>
                  {link}
                </NavLink>
              );
            })}
            <Button
              width="full"
              maxW="200px"
              background="#D76C82"
              color="#EBE8DB"
              borderRadius="full"
              fontWeight="semibold"
              fontSize="sm"
              onClick={handleNavClick("contact")}
              py={2}
            >
              Contact
            </Button>
          </VStack>
        </Box>
      </Box>
    </Box>
  );
}

// File: c:\Users\ashre\Downloads\demo (1)\front\Portfolio\src\main.tsx
import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import { ChakraProvider, createSystem, defaultConfig } from '@chakra-ui/react';
import App from './App.tsx';

// Create the system with default config
const system = createSystem(defaultConfig);

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <ChakraProvider value={system}>
      <App />
    </ChakraProvider>
  </StrictMode>
);

// File: c:\Users\ashre\Downloads\demo (1)\front\Portfolio\src\sections\About\About.tsx
import {
  Box,
  Container,
  Flex,
  Text,
  Heading,
  VStack
} from '@chakra-ui/react';
import { Player } from '@lottiefiles/react-lottie-player';
import animationData from '../../assets/animations/girl on computer.json';

const AboutMe = () => {
  return (
    <Box
      minH={{ base: "auto", md: "100vh" }}
      bg="#EBE8DB"
      position="relative"
      py={{ base: 10, md: 20 }}
      overflow="hidden"
    >
      <Box position="absolute" inset={0}>
        <Box
          position="absolute"
          top={{ base: "40px", md: "80px" }}
          left={{ base: "20px", md: "40px" }}
          w={{ base: "80px", md: "128px" }}
          h={{ base: "80px", md: "128px" }}
          bg="#B03052"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
        <Box
          position="absolute"
          top={{ base: "100px", md: "160px" }}
          right={{ base: "20px", md: "80px" }}
          w={{ base: "120px", md: "192px" }}
          h={{ base: "120px", md: "192px" }}
          bg="#D76C82"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
      </Box>

      <Container maxW={{ base: "90%", md: "7xl" }} position="relative" zIndex={10}>
        <VStack gap={{ base: 4, md: 6 }} mb={{ base: 8, md: 16 }} textAlign="center">
          <Heading
            color="#3D0301"
            fontSize={{ base: '2xl', sm: '3xl', md: '4xl', lg: '6xl' }}
            fontWeight="bold"
          >
            About Me
          </Heading>
          <Box
            w="80px"
            h="4px"
            bg="#D76C82"
            borderRadius="full"
          />
        </VStack>

        <Flex
          direction={{ base: 'column', lg: 'row' }}
          gap={{ base: 8, md: 12 }}
          align="center"
          justify="center"
        >
          <VStack flex={1} align="center" gap={{ base: 4, md: 6 }}>
            <Box position="relative" w={{ base: "80%", sm: "60%", md: "500px" }} h={{ base: "auto", md: "500px" }}>
              <Box
                w="100%"
                h="100%"
                display="flex"
                alignItems="center"
                justifyContent="center"
              >
                <Player
                  autoplay
                  loop
                  speed={0.7}
                  src={animationData}
                  style={{ width: '100%', height: '100%', maxWidth: '500px', maxHeight: '500px' }}
                />
              </Box>
            </Box>
          </VStack>

          <VStack flex={{ base: 1, lg: 1.5 }} align="start" gap={{ base: 4, md: 8 }}>
            <Box
              bg="#EBE8DB"
              borderRadius="3xl"
              px={{ base: 4, md: 8 }}
              py={{ base: 4, md: 8 }}
              border="2px solid #D76C82"
              boxShadow="0 8px 32px rgba(61, 3, 1, 0.1)"
              w="full"
              transition="all 0.3s"
              _hover={{ borderColor: '#B03052' }}
            >
              <VStack align="start" gap={{ base: 4, md: 6 }}>
                <Text
                  color="#3D0301"
                  fontSize={{ base: 'sm', md: 'md', lg: 'lg' }}
                  lineHeight="relaxed"
                  opacity={0.9}
                >
                  Welcome to my portfolio! I'm <Text as="span" color="#B03052" fontWeight="bold">Shahd Najjar</Text>, a third-year Computer Science student at the Higher Institute of Computer Science, passionate about web development and project management. I have a solid mastery of web technologies and hands-on experience in project management through my associative engagement.
                </Text>
                
                <Text
                  color="#3D0301"
                  fontSize={{ base: 'sm', md: 'md', lg: 'lg' }}
                  lineHeight="relaxed"
                  opacity={0.9}
                >
                  Curious, rigorous, and proactive, I seek to join a dynamic team to contribute to innovative projects while enhancing my technical and professional skills. My internship at StartNow as a full-stack developer involved building a Learning Management System using Spring Boot, React TypeScript, and Chakra UI in an agile setting.
                </Text>

                <Text
                  color="#3D0301"
                  fontSize={{ base: 'sm', md: 'md', lg: 'lg' }}
                  lineHeight="relaxed"
                  opacity={0.9}
                >
                  I am deeply committed to my work, investing creativity and precision into every project to deliver unique and effective solutions.
                </Text>
              </VStack>
            </Box>
          </VStack>
        </Flex>
      </Container>
    </Box>
  );
};

export default AboutMe;

// File: c:\Users\ashre\Downloads\demo (1)\front\Portfolio\src\sections\Contact\Contact.tsx
import {
  Box,
  Container,
  Heading,
  VStack,
  Input,
  Textarea,
  Button,
  Text,
} from '@chakra-ui/react';

const Contact = () => {
  return (
    <Box
      minH={{ base: "auto", md: "100vh" }}
      bg="#EBE8DB"
      position="relative"
      py={{ base: 10, md: 20 }}
      overflow="hidden"
    >
      <Box position="absolute" inset={0}>
        <Box
          position="absolute"
          top={{ base: "40px", md: "80px" }}
          left={{ base: "20px", md: "40px" }}
          w={{ base: "80px", md: "128px" }}
          h={{ base: "80px", md: "128px" }}
          bg="#B03052"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
        <Box
          position="absolute"
          bottom={{ base: "40px", md: "80px" }}
          right={{ base: "20px", md: "80px" }}
          w={{ base: "100px", md: "160px" }}
          h={{ base: "100px", md: "160px" }}
          bg="#D76C82"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
      </Box>

      <Container maxW={{ base: "90%", md: "7xl" }} position="relative" zIndex={10}>
        <VStack gap={{ base: 4, md: 6 }} mb={{ base: 8, md: 16 }} textAlign="center">
          <Heading
            color="#3D0301"
            fontSize={{ base: '2xl', sm: '3xl', md: '4xl', lg: '6xl' }}
            fontWeight="bold"
          >
            Get in <Text as="span" color="#B03052">Touch</Text>
          </Heading>
          <Box w="80px" h="4px" bg="#D76C82" borderRadius="full" />
        </VStack>

        <Box
          bg="#EBE8DB"
          borderRadius="3xl"
          px={{ base: 4, md: 8 }}
          py={{ base: 6, md: 10 }}
          border="2px solid #cbabb1ff"
          boxShadow="0 8px 32px rgba(61, 3, 1, 0.1)"
          maxW={{ base: "100%", md: "600px" }}
          mx="auto"
          transition="all 0.3s"
          _hover={{ borderColor: '#c4a6aeff' }}
        >
          <VStack gap={{ base: 4, md: 6 }} align="start">
            <Box w="full">
              <Text color="#3D0301" fontWeight="semibold" mb={2}>
                Name
              </Text>
              <Input
                type="text"
                placeholder="Your Name"
                bg="#FFF2EF"
                border="1px solid #d4b3baff"
                borderRadius="md"
                color="#3D0301"
                _focus={{ borderColor: '#B03052', boxShadow: '0 0 0 1px #B03052' }}
                size={{ base: "md", md: "lg" }}
              />
            </Box>

            <Box w="full">
              <Text color="#3D0301" fontWeight="semibold" mb={2}>
                Email
              </Text>
              <Input
                type="email"
                placeholder="Your Email"
                bg="#FFF2EF"
                border="1px solid #d4b3baff"
                borderRadius="md"
                color="#3D0301"
                _focus={{ borderColor: '#B03052', boxShadow: '0 0 0 1px #B03052' }}
                size={{ base: "md", md: "lg" }}
              />
            </Box>

            <Box w="full">
              <Text color="#3D0301" fontWeight="semibold" mb={2}>
                Message
              </Text>
              <Textarea
                placeholder="Your Message"
                bg="#FFF2EF"
                border="1px solid #d4b3baff"
                borderRadius="md"
                color="#3D0301"
                rows={{ base: 4, md: 5 }}
                _focus={{ borderColor: '#B03052', boxShadow: '0 0 0 1px #B03052' }}
                size={{ base: "md", md: "lg" }}
              />
            </Box>

            <Button
              bg="#D76C82"
              color="#EBE8DB"
              borderRadius="full"
              px={{ base: 4, md: 8 }}
              py={{ base: 4, md: 6 }}
              fontWeight="semibold"
              _hover={{ bg: '#C95A78', transform: 'translateY(-2px)' }}
              transition="all 0.3s"
              boxShadow="lg"
              w="full"
              size={{ base: "md", md: "lg" }}
            >
              Send Message
            </Button>
          </VStack>
        </Box>
      </Container>
    </Box>
  );
};

export default Contact;

// File: c:\Users\ashre\Downloads\demo (1)\front\Portfolio\src\sections\LandingPage\LandingPage.tsx
import {
  Box,
  Flex,
  Text,
  Heading,
  Button,
  HStack,
  VStack,
  IconButton,
} from '@chakra-ui/react';
import { Download, Github, Linkedin, Mail, Dribbble } from 'lucide-react';
import { Player } from '@lottiefiles/react-lottie-player';
import animationData from '../../assets/animations/Coder.json';

const LandingPage = () => {
  return (
    <Box
      minH={{ base: "80vh", md: "100vh" }}
      bg="#EBE8DB"
      position="relative"
      overflow="hidden"
    >
      <Box position="absolute" inset={0}>
        <Box
          position="absolute"
          top={{ base: "40px", md: "80px" }}
          left={{ base: "20px", md: "40px" }}
          w={{ base: "80px", md: "128px" }}
          h={{ base: "80px", md: "128px" }}
          bg="#B03052"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
        <Box
          position="absolute"
          top={{ base: "100px", md: "160px" }}
          right={{ base: "20px", md: "80px" }}
          w={{ base: "120px", md: "192px" }}
          h={{ base: "120px", md: "192px" }}
          bg="#D76C82"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
        <Box
          position="absolute"
          bottom={{ base: "40px", md: "80px" }}
          left={{ base: "20px", md: "80px" }}
          w={{ base: "100px", md: "160px" }}
          h={{ base: "100px", md: "160px" }}
          bg="#3D0301"
          opacity={0.05}
          borderRadius="full"
          filter="blur(48px)"
        />
      </Box>

      <Box maxW="full" px={{ base: 4, md: 8 }} py={{ base: 8, md: 12 }} position="relative" zIndex={10}>
        <Flex
          direction={{ base: 'column', lg: 'row' }}
          gap={{ base: 8, md: 12 }}
          align="center"
          minH={{ base: "auto", md: "100vh" }}
          maxW="7xl"
          mx="auto"
        >
          <VStack align={{ base: 'center', lg: 'start' }} spacing={{ base: 4, md: 8 }} flex={1}>
            <VStack align={{ base: 'center', lg: 'start' }} spacing={{ base: 2, md: 4 }}>
              <VStack align={{ base: 'center', lg: 'start' }} spacing={{ base: 1, md: 2 }}>
                <Heading
                  color="#3D0301"
                  fontSize={{ base: '2xl', sm: '3xl', md: '4xl', lg: '6xl' }}
                  fontWeight="bold"
                  textAlign={{ base: 'center', lg: 'left' }}
                  lineHeight="1.1"
                >
                  Hi, I'm Shahd Najjar
                </Heading>
                
                <Flex align="baseline" gap={3} wrap="wrap" justify={{ base: 'center', lg: 'start' }}>
                  <Heading
                    fontSize={{ base: 'xl', sm: '2xl', md: '3xl', lg: '5xl' }}
                    fontWeight="bold"
                    color="#B03052"
                    lineHeight="1.3"
                  >
                    Full-Stack
                  </Heading>
                  <Heading
                    color="#3D0301"
                    fontSize={{ base: 'xl', sm: '2xl', md: '3xl', lg: '5xl' }}
                    fontWeight="bold"
                  >
                    Developer
                  </Heading>
                </Flex>
              </VStack>
              
              <Text
                color="#3D0301"
                opacity={0.8}
                fontSize={{ base: 'sm', md: 'lg' }}
                maxW={{ base: "90%", md: "md" }}
                lineHeight="relaxed"
                textAlign={{ base: 'center', lg: 'left' }}
              >
                Second-year Computer Science student passionate about web development and digital project management. I create robust and user-friendly web applications, transforming ideas into efficient digital solutions.
              </Text>
            </VStack>

            <HStack spacing={{ base: 2, md: 4 }} wrap="wrap" justify={{ base: 'center', lg: 'start' }}>
              <Button
                bg="#D76C82"
                color="#EBE8DB"
                px={{ base: 4, md: 8 }}
                py={{ base: 4, md: 6 }}
                borderRadius="full"
                fontWeight="semibold"
                _hover={{ bg: '#C95A78' }}
                transition="all 0.3s"
                boxShadow="lg"
                size={{ base: "md", md: "lg" }}
              >
                My Projects
              </Button>
              <Button
                variant="outline"
                bg="#EBE8DB"
                color="#3D0301"
                borderColor="#dab8bfff"
                px={{ base: 4, md: 8 }}
                py={{ base: 4, md: 6 }}
                borderRadius="full"
                fontWeight="semibold"
                _hover={{ bg: '#E5E2D5' }}
                transition="all 0.3s"
                size={{ base: "md", md: "lg" }}
              >
                <Download size={{ base: 16, md: 18 }} style={{ marginRight: '8px' }} />
                Download CV
              </Button>
            </HStack>

            <HStack spacing={{ base: 2, md: 4 }}>
              <IconButton
                aria-label="GitHub"
                w={{ base: 10, md: 12 }}
                h={{ base: 10, md: 12 }}
                bg="#EBE8DB"
                color="#3D0301"
                borderRadius="full"
                border="1px solid #cdb5baff"
                _hover={{ bg: '#E5E2D5' }}
                transition="all 0.3s"
              >
                <Github size={{ base: 16, md: 20 }} />
              </IconButton>
              <IconButton
                aria-label="LinkedIn"
                w={{ base: 10, md: 12 }}
                h={{ base: 10, md: 12 }}
                bg="#EBE8DB"
                color="#3D0301"
                borderRadius="full"
                border="1px solid #c0a9aeff"
                _hover={{ bg: '#E5E2D5' }}
                transition="all 0.3s"
              >
                <Linkedin size={{ base: 16, md: 20 }} />
              </IconButton>
              <IconButton
                aria-label="Email"
                w={{ base: 10, md: 12 }}
                h={{ base: 10, md: 12 }}
                bg="#EBE8DB"
                color="#3D0301"
                borderRadius="full"
                border="1px solid #c0a9aeff"
                _hover={{ bg: '#E5E2D5' }}
                transition="all 0.3s"
              >
                <Mail size={{ base: 16, md: 20 }} />
              </IconButton>
              <IconButton
                aria-label="Dribbble"
                w={{ base: 10, md: 12 }}
                h={{ base: 10, md: 12 }}
                bg="#EBE8DB"
                color="#3D0301"
                borderRadius="full"
                border="1px solid #c2a9aeff"
                _hover={{ bg: '#E5E2D5' }}
                transition="all 0.3s"
              >
                <Dribbble size={{ base: 16, md: 20 }} />
              </IconButton>
            </HStack>
          </VStack>

          <Flex justify={{ base: 'center', lg: 'end' }} flex={1}>
            <Box position="relative" w={{ base: "80%", sm: "60%", md: "500px" }} h={{ base: "auto", md: "500px" }}>
              <Box
                w="100%"
                h="100%"
                display="flex"
                alignItems="center"
                justifyContent="center"
              >
                <Player
                  autoplay
                  loop
                  speed={0.8}
                  src={animationData}
                  style={{ width: '100%', height: '100%', maxWidth: '500px', maxHeight: '500px' }}
                />
              </Box>
            </Box>
          </Flex>
        </Flex>
      </Box>
    </Box>
  );
};

export default LandingPage;

// File: c:\Users\ashre\Downloads\demo (1)\front\Portfolio\src\sections\Projects\Projects.tsx
import React, { useState } from 'react';
import {
  Box,
  Container,
  Flex,
  Text,
  Heading,
  VStack,
  HStack,
  Grid,
  GridItem,
  Button,
  DialogRoot,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogBody,
  DialogCloseTrigger,
  Badge,
} from '@chakra-ui/react';

interface Project {
  id: number;
  title: string;
  description: string;
  category: string;
  image: string;
  link: string;
}

const projects: Project[] = [
  {
    id: 1,
    title: 'Application desktop de Gestion de Restaurant',
    description: 'Développement d\'une application de bureau pour la gestion des commandes, des tables, du menu et de la facturation dans un restaurant. Interface utilisateur conçue avec JavaFX et base de données relationnelle MySQL pour stocker les informations clients, plats et commandes.',
    category: 'Desktop Development',
    image: 'https://via.placeholder.com/400x300',
    link: '#',
  },
  {
    id: 2,
    title: 'Paradice – Application web de Gestion de Stock',
    description: 'Développement d\'une application web interne pour une entreprise de fabrication de glace. Elle Petite description pour le projet 2',
    category: 'Web Development',
    image: 'https://via.placeholder.com/400x300',
    link: '#',
  },
  {
    id: 3,
    title: 'Cosmos Delivery – Application Web de Livraison',
    description: 'Développement d\'une application web complète de gestion de livraisons. L\'application gère plusieurs rôles : Client, Service Client, Livreur, Administrateur. Back-end construit avec Node.js et Express.js, base de données PostgreSQL. Documentation interactive générée avec Swagger. Tests d\'API réalisés avec Postman. Interface utilisateur développée en React.js.',
    category: 'Web Development',
    image: 'https://via.placeholder.com/400x300',
    link: '#',
  },
  {
    id: 4,
    title: 'Portfolio Website',
    description: 'A personal portfolio showcasing creative projects with a focus on modern aesthetics.',
    category: 'Web Development',
    image: 'https://via.placeholder.com/400x300',
    link: '#',
  },
];

const Projects = () => {
  const [filter, setFilter] = useState<string>('All');

  const categories = ['All', 'Desktop Development', 'Web Development'];

  const filteredProjects = filter === 'All' ? projects : projects.filter((project) => project.category === filter);

  return (
    <Box
      minH={{ base: "auto", md: "100vh" }}
      bg="#EBE8DB"
      position="relative"
      py={{ base: 10, md: 20 }}
      overflow="hidden"
      id="myprojects"
    >
      <Box position="absolute" inset={0}>
        <Box
          position="absolute"
          top={{ base: "40px", md: "80px" }}
          left={{ base: "20px", md: "40px" }}
          w={{ base: "80px", md: "128px" }}
          h={{ base: "80px", md: "128px" }}
          bg="#B03052"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
        <Box
          position="absolute"
          bottom={{ base: "40px", md: "80px" }}
          right={{ base: "20px", md: "80px" }}
          w={{ base: "100px", md: "160px" }}
          h={{ base: "100px", md: "160px" }}
          bg="#D76C82"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
      </Box>

      <Container maxW={{ base: "90%", md: "7xl" }} position="relative" zIndex={10}>
        <VStack gap={{ base: 4, md: 6 }} mb={{ base: 8, md: 16 }} textAlign="center">
          <Heading
            color="#3D0301"
            fontSize={{ base: '2xl', sm: '3xl', md: '4xl', lg: '5xl' }}
            fontWeight="bold"
          >
            My Projects
          </Heading>
          <Box
            w="80px"
            h="4px"
            bg="#D76C82"
            borderRadius="full"
          />
        </VStack>

        <HStack gap={{ base: 2, md: 4 }} justify="center" mb={{ base: 8, md: 12 }} flexWrap="wrap">
          {categories.map((category) => (
            <Button
              key={category}
              bg={filter === category ? '#D76C82' : '#EBE8DB'}
              borderRadius="full"
              border="1px solid #D76C82"
              color={filter === category ? '#EBE8DB' : '#3D0301'}
              fontWeight="semibold"
              px={{ base: 4, md: 6 }}
              py={{ base: 1, md: 2 }}
              _hover={{ 
                bg: filter === category ? '#C95A78' : '#E5E2D5'
              }}
              transition="all 0.3s"
              onClick={() => setFilter(category)}
              size={{ base: "sm", md: "md" }}
            >
              {category}
            </Button>
          ))}
        </HStack>

        <Grid
          templateColumns={{ base: '1fr', sm: 'repeat(2, 1fr)', lg: 'repeat(3, 1fr)' }}
          gap={{ base: 4, md: 8 }}
        >
          {filteredProjects.map((project) => (
            <GridItem key={project.id}>
              <DialogRoot>
                <DialogTrigger asChild>
                  <Box
                    bg="#FFF2EF"
                    borderRadius="2xl"
                    border="1px solid rgba(247, 165, 165, 0.5)"
                    boxShadow="0 8px 32px rgba(0, 0, 0, 0.1)"
                    p={{ base: 4, md: 6 }}
                    transition="all 0.3s"
                    _hover={{
                      transform: 'translateY(-8px)',
                      boxShadow: '0 12px 40px rgba(247, 165, 165, 0.3)',
                    }}
                    cursor="pointer"
                  >
                    <Box
                      w="full"
                      h={{ base: "150px", md: "200px" }}
                      bg="#FFF2EF"
                      borderRadius="xl"
                      mb={{ base: 2, md: 4 }}
                      display="flex"
                      alignItems="center"
                      justifyContent="center"
                      overflow="hidden"
                    >
                      {project.image ? (
                        <img 
                          src={project.image} 
                          alt={project.title} 
                          style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '8px' }} 
                        />
                      ) : (
                        <Text color="#FFF2EF" opacity={0.8} fontSize={{ base: "xs", md: "sm" }}>
                          Project Preview
                        </Text>
                      )}
                    </Box>
                    <VStack align="start" gap={{ base: 2, md: 3 }}>
                      <Badge
                        bg="#FFDBB6"
                        color="#5D688A"
                        px={{ base: 2, md: 3 }}
                        py={1}
                        borderRadius="full"
                        fontSize={{ base: "xs", md: "xs" }}
                      >
                        {project.category}
                      </Badge>
                      <Heading color="#5D688A" fontSize={{ base: "lg", md: "xl" }} fontWeight="bold">
                        {project.title}
                      </Heading>
                      <Text color="#5D688A" opacity={0.7} fontSize={{ base: "xs", md: "sm" }} noOfLines={2}>
                        {project.description}
                      </Text>
                    </VStack>
                  </Box>
                </DialogTrigger>
                
                <DialogContent
                  bg="#FFF2EF"
                  borderRadius="2xl"
                  border="1px solid #F7A5A5"
                  boxShadow="0 8px 32px rgba(93, 104, 138, 0.1)"
                  maxW={{ base: "90%", md: "xl" }}
                  mx="auto"
                >
                  <DialogHeader>
                    <Heading color="#5D688A" fontSize={{ base: "xl", md: "2xl" }} fontWeight="bold">
                      {project.title}
                    </Heading>
                    <DialogCloseTrigger color="#5D688A" />
                  </DialogHeader>
                  <DialogBody pb={6}>
                    <VStack gap={{ base: 3, md: 4 }} align="start">
                      {project.image && (
                        <Box
                          w="full"
                          h={{ base: "200px", md: "300px" }}
                          bg="#F7A5A5"
                          borderRadius="xl"
                          overflow="hidden"
                        >
                          <img
                            src={project.image}
                            alt={project.title}
                            style={{ width: '100%', height: '100%', objectFit: 'cover' }}
                          />
                        </Box>
                      )}
                      <Badge
                        bg="#FFDBB6"
                        color="#5D688A"
                        px={{ base: 2, md: 3 }}
                        py={1}
                        borderRadius="full"
                        fontSize={{ base: "xs", md: "xs" }}
                      >
                        {project.category}
                      </Badge>
                      <Text color="#5D688A" opacity={0.7} fontSize={{ base: "sm", md: "md" }}>
                        {project.description}
                      </Text>
                      <Button
                        as="a"
                        bg="#F7A5A5"
                        color="#FFF2EF"
                        borderRadius="full"
                        px={{ base: 4, md: 6 }}
                        py={{ base: 1, md: 2 }}
                        _hover={{ bg: "#F59494" }}
                        size={{ base: "sm", md: "md" }}
                      >
                        View Project
                      </Button>
                    </VStack>
                  </DialogBody>
                </DialogContent>
              </DialogRoot>
            </GridItem>
          ))}
        </Grid>
      </Container>
    </Box>
  );
};

export default Projects;

// File: c:\Users\ashre\Downloads\demo (1)\front\Portfolio\src\sections\Skills\Skills.tsx
import { useState, useEffect } from 'react';
import {
  Box,
  Container,
  Heading,
  Text,
  VStack,
  HStack,
  Grid,
  GridItem,
  Button,
  Image,
} from '@chakra-ui/react';
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { 
  faReact, faJs, faHtml5, faCss3Alt, faPhp, faJava, faNodeJs, 
  faPython, faGit, faWordpress 
} from "@fortawesome/free-brands-svg-icons";
import { faDatabase } from "@fortawesome/free-solid-svg-icons";
import CIcon from '@coreui/icons-react';
import { cibSwagger, cibPostman, cibTypescript } from '@coreui/icons';

interface Skill {
  name: string;
  category: string;
  icon?: any;
  coreIcon?: any;
  logo?: string;
  color: string;
}

const Skills = () => {
  const [activeSkill, setActiveSkill] = useState<string | null>(null);
  const [glowIndex, setGlowIndex] = useState(0);

  const allSkills: Skill[] = [
    { name: 'React.js', category: 'Frontend', icon: faReact, color: '#D76C82' },
    { name: 'JavaScript', category: 'Frontend', icon: faJs, color: '#D76C82' },
    { name: 'HTML5', category: 'Frontend', icon: faHtml5, color: '#D76C82' },
    { name: 'CSS3', category: 'Frontend', icon: faCss3Alt, color: '#D76C82' },
    { name: 'TypeScript', category: 'Frontend', coreIcon: cibTypescript, color: '#D76C82' },
    { name: 'PHP', category: 'Backend', icon: faPhp, color: '#D76C82' },
    { name: 'Java', category: 'Backend', icon: faJava, color: '#D76C82' },
    { name: 'Node.js', category: 'Backend', icon: faNodeJs, color: '#D76C82' },
    { name: 'Python', category: 'Backend', icon: faPython, color: '#D76C82' },
    { name: 'MySQL', category: 'Database', icon: faDatabase, color: '#D76C82' },
    { name: 'WordPress', category: 'Tools', icon: faWordpress, color: '#D76C82' },
    { name: 'Git', category: 'Tools', icon: faGit, color: '#D76C82' },
    { name: 'Postman', category: 'Tools', coreIcon: cibPostman, color: '#D76C82' },
    { name: 'Swagger', category: 'Tools', coreIcon: cibSwagger, color: '#D76C82' },
  ];

  const categories = ['All', 'Frontend', 'Backend', 'Database', 'Tools'];
  const [selectedCategory, setSelectedCategory] = useState('All');

  const filteredSkills = selectedCategory === 'All'
    ? allSkills
    : allSkills.filter((skill) => skill.category === selectedCategory);

  useEffect(() => {
    const interval = setInterval(() => {
      setGlowIndex((prev) => (prev + 1) % filteredSkills.length);
    }, 2500);
    return () => clearInterval(interval);
  }, [filteredSkills.length]);

  return (
    <Box
      minH={{ base: "auto", md: "100vh" }}
      bg="#EBE8DB"
      position="relative"
      py={{ base: 10, md: 20 }}
      overflow="hidden"
    >
      <Box position="absolute" inset={0}>
        <Box
          position="absolute"
          top={{ base: "40px", md: "80px" }}
          left={{ base: "20px", md: "40px" }}
          w={{ base: "80px", md: "128px" }}
          h={{ base: "80px", md: "128px" }}
          bg="#B03052"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
        <Box
          position="absolute"
          bottom={{ base: "40px", md: "80px" }}
          right={{ base: "20px", md: "80px" }}
          w={{ base: "100px", md: "160px" }}
          h={{ base: "100px", md: "160px" }}
          bg="#D76C82"
          opacity={0.1}
          borderRadius="full"
          filter="blur(48px)"
        />
      </Box>

      <Container maxW={{ base: "90%", md: "7xl" }} position="relative" zIndex={10}>
        <VStack gap={{ base: 4, md: 6 }} mb={{ base: 8, md: 16 }} textAlign="center">
          <Heading
            color="#3D0301"
            fontSize={{ base: '2xl', sm: '3xl', md: '4xl', lg: '6xl' }}
            fontWeight="bold"
          >
            Technical <Text as="span" color="#B03052">Skills</Text>
          </Heading>
          <Box w="80px" h="4px" bg="#D76C82" borderRadius="full" />
        </VStack>

        <HStack gap={{ base: 2, md: 4 }} justify="center" mb={{ base: 8, md: 12 }} flexWrap="wrap">
          {categories.map((category) => (
            <Button
              key={category}
              bg={selectedCategory === category ? '#D76C82' : '#EBE8DB'}
              borderRadius="full"
              border="1px solid #D76C82"
              color={selectedCategory === category ? '#EBE8DB' : '#3D0301'}
              fontWeight="semibold"
              px={{ base: 4, md: 6 }}
              py={{ base: 1, md: 2 }}
              _hover={{ 
                bg: selectedCategory === category ? '#C95A78' : '#E5E2D5'
              }}
              transition="all 0.3s"
              onClick={() => setSelectedCategory(category)}
              size={{ base: "sm", md: "md" }}
            >
              {category}
            </Button>
          ))}
        </HStack>

        <Grid
          templateColumns={{ base: 'repeat(auto-fit, minmax(120px, 1fr))', sm: 'repeat(auto-fit, minmax(140px, 1fr))', md: 'repeat(auto-fit, minmax(160px, 1fr))' }}
          gap={{ base: 4, md: 6 }}
        >
          {filteredSkills.map((skill, index) => {
            const isActive = glowIndex === index;
            const isHovered = activeSkill === skill.name;

            return (
              <GridItem
                key={skill.name}
                bg="#EBE8DB"
                borderRadius="2xl"
                border={isActive || isHovered ? `2px solid ${skill.color}` : '1px solid rgba(61, 3, 1, 0.3)'}
                p={{ base: 4, md: 6 }}
                transition="all 0.3s"
                _hover={{
                  transform: 'translateY(-8px)',
                  boxShadow: `0 12px 40px ${skill.color}40`,
                }}
                cursor="pointer"
                onMouseEnter={() => setActiveSkill(skill.name)}
                onMouseLeave={() => setActiveSkill(null)}
                position="relative"
              >
                {isActive && (
                  <Box
                    position="absolute"
                    top={{ base: "8px", md: "12px" }}
                    right={{ base: "8px", md: "12px" }}
                    w="8px"
                    h="8px"
                    bg={skill.color}
                    borderRadius="full"
                    animation="ping 1s infinite"
                  />
                )}
                <VStack align="center" gap={{ base: 2, md: 3 }}>
                  {skill.icon ? (
                    <Box display="flex" alignItems="center" justifyContent="center" w={{ base: "48px", md: "64px" }} h={{ base: "48px", md: "64px" }}>
                      <FontAwesomeIcon
                        icon={skill.icon}
                        size={{ base: "2x", md: "3x" }}
                        color={skill.color}
                        style={{
                          filter: isActive || isHovered ? 'brightness(1.1) saturate(1.2)' : 'brightness(0.9)',
                          transition: 'all 0.3s'
                        }}
                      />
                    </Box>
                  ) : skill.coreIcon ? (
                    <Box
                      display="flex"
                      alignItems="center"
                      justifyContent="center"
                      w={{ base: "48px", md: "64px" }}
                      h={{ base: "48px", md: "64px" }}
                    >
                      <CIcon
                        icon={skill.coreIcon}
                        width={{ base: 36, md: 48 }}
                        height={{ base: 36, md: 48 }}
                        color={skill.color}
                        style={{
                          filter: `brightness(${isActive || isHovered ? 1.1 : 0.9}) saturate(${isActive || isHovered ? 1.2 : 1})`,
                          transition: 'all 0.3s',
                          fill: skill.color
                        }}
                      />
                    </Box>
                  ) : skill.logo ? (
                    <Image
                      src={skill.logo}
                      alt={`${skill.name} logo`}
                      boxSize={{ base: "48px", md: "64px" }}
                      objectFit="contain"
                      filter={isActive || isHovered ? 'brightness(1.1) saturate(1.2)' : 'brightness(0.9)'}
                      transition="all 0.3s"
                    />
                  ) : null}

                  <Text fontSize={{ base: "sm", md: "md" }} fontWeight="semibold" color="#3D0301" textAlign="center">
                    {skill.name}
                  </Text>

                  <Text
                    fontSize={{ base: "xs", md: "xs" }}
                    px={{ base: 2, md: 3 }}
                    py={1}
                    borderRadius="full"
                    border={`1px solid ${skill.color}`}
                    bg={isActive || isHovered ? `${skill.color}20` : '#EBE8DB'}
                    color={isActive || isHovered ? skill.color : '#3D0301'}
                  >
                    {skill.category}
                  </Text>
                </VStack>
              </GridItem>
            );
          })}
        </Grid>
      </Container>

      <style>
        {`
          @keyframes ping {
            75%, 100% { transform: scale(2); opacity: 0; }
          }
        `}
      </style>
    </Box>
  );
};

export default Skills;

